<?xml version="1.0" encoding="UTF-8" ?>
<types>
    <encode-error error_class="ParseError"/>
    <decode-error error_class="ParseError"/>
    <composite>
        <type-composite typeName="request">
            <comment>This is the standard request body for a JSON RPC Request</comment>
            <field fieldName="id" required="true" type="int"/>
            <field fieldName="method" required="true" type="string"/>
            <field fieldName="params" required="true" type="string"/>
            <field fieldName="jsonRPC" required="false" type="version_string"/>
        </type-composite>
    </composite>
    <constrained>
        <type-constrained baseType="byte-array" max="infinity"
            min="4" regex="^0x([0-9a-fA-F][0-9a-fA-F])+" typeName="data_hex_string"/>
        <type-constrained baseType="bigint" max="infinity" min="3" regex="^0x[0-9a-fA-F]+"
            typeName="hex_string"/>
        <type-constrained baseType="long" min="3" max="19" regex="^0x[0-9a-fA-F]+"
            typeName="long_hex_string"/>
        <type-constrained baseType="int" min="3" max="11" regex="^0x[0-9a-fA-F]+"
            typeName="int_hex_string"/>
    </constrained>
    <enum>
        <type-enum typeName="version_string" internalType = "string">
            <value name="Version2" var="2.0"/>
        </type-enum>
    </enum>
    <param>
        <!-- param types specific to each method-->
        <type-params-wrapper typeName="ecRecoverParams">
            <field fieldName="dataThatWasSigned" index="0" required="true" type="data_hex_string"/>
            <field fieldName="signature" index="1" required="true" type="data_hex_string"/>
        </type-params-wrapper>
        <!-- return type specific to each method-->
    </param>
    <primitives>
        <type-primitive typeName="string"/>
        <type-primitive typeName="long"/>
        <type-primitive typeName="int"/>
        <type-primitive typeName="bigint"/>
        <type-primitive typeName="byte-array"/>
        <type-primitive typeName="address"/>
    </primitives>
</types>